import asyncio
import random

import requests
import time

from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ContentType, ParseMode, ChatActions

from scripts import *

API_TOKEN = '6096985077:AAHp8wmQTOpz5GiizYnW2R5fuKORCtUuUGM'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_dict = {"in_game": False, "attempts": 0, "number": 0}


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply(
        "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç! –°–µ–π—á–∞—Å –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n/help - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥–∞—Ö\n/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/photo - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∞\n/game - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n/cancel - –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É")


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    if user_dict["in_game"] == True:
        await message.answer(f"–Ø —Ö–æ—Ç–µ–ª –ø–æ–∏–≥—Ä–∞—Ç—å...")
    elif user_dict["in_game"] == False:
        first_name = message.from_user.first_name
        await message.reply(f"–ü—Ä–∏–≤–µ—Ç, {first_name}!")


# @dp.message_handler(commands=['file'])
# async def process_file_command(message: types.Message):
#     user_id = message.from_user.id
#     await bot.send_chat_action(user_id, ChatActions.UPLOAD_DOCUMENT)
#     file = r"C:\Users\artyo\Desktop\–∫—É—Ä.docx"
#     await asyncio.sleep(1)
#     await bot.send_document(user_id, open(file, 'rb'), caption='–≠—Ç–æ—Ç —Ñ–∞–π–ª')


@dp.message_handler(commands=['photo'])
async def process_photo_command(message: types.Message):
    if user_dict["in_game"] == True:
        await message.answer(f"–ú—ã –∏–≥—Ä–∞–µ–º, –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–π—Å—è!")
    else:
        user_id = message.from_user.id
        await bot.send_chat_action(user_id, ChatActions.UPLOAD_PHOTO)
        file = get_cat_picture()
        capt = "–£—Ä–∞ –∫–æ—Ç—ã!!!"
        first_name = message.from_user.first_name
        if first_name == "spetan":
            file = get_bear_picture()
            captions = ["–¥–∞–∞–∞, –º–µ–¥–≤–µ–¥–∏", "–Ω—É —Ç–∞–∫–∏–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ —Ä–µ–±—è—Ç–∞",
                        "–µ—â–µ –µ—Å—Ç—å –ø–∏–∑–¥—é—á–µ–ª–æ 1,5 –º–µ—Ç—Ä–∞,\n–Ω—É —Ç–∞–º —Ç–∞–∫–æ–π, –æ—Ç–¥—ã—Ö–∞—é—â–∏–π, –Ω–æ —Å –ø—Ä–∏–ø–∏–∑–¥–æ–Ω–æ–º",
                        "–µ–±–∞—Ç—å –≥—Ä–∏–∑–ª–∏ —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π 56–∫–º –≤ —á–∞—Å", "—Å—É–∫–∞ –∏–º–±–∞–ª–∞–Ω—Å–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤–∞",
                        "–û–Ω–∏ –Ω–µ —É–º–µ—Ä–ª–∏!\n–¢–∞–º –ø—Ä–æ—Å—Ç–æ —Ç–æ–ª—å–∫–æ —Å–µ—Ä—ã–µ —Ñ–æ—Ç–∫–∏..."]
            capt = captions[random.randint(0, 5)]
        await bot.send_photo(user_id, file, reply_to_message_id=message.message_id, caption=capt)


@dp.message_handler(commands=['game'])
async def process_start_command(message: types.Message):
    if user_dict["in_game"] == True:
        await message.answer(f"–ú—ã —É–∂–µ –∏–≥—Ä–∞–µ–º, —Ä–∞–∑–≤–µ –Ω–µ—Ç?")
    else:
        first_name = message.from_user.first_name
        if user_dict["in_game"] == False:
            user_dict["in_game"] = True
            user_dict["number"] = get_random_num()
            await message.reply(
                f"–ù—É —á—Ç–æ, {first_name}, –≥–æ—Ç–æ–≤ —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É?\n–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã: —è –∑–∞–≥–∞–¥—ã–≤–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 –∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–∫–æ–ª—å–∫–æ-—Ç–æ –ø–æ–ø—ã—Ç–æ–∫ –µ–≥–æ —É–≥–∞–¥–∞—Ç—å (–Ω–∞–ø–∏—à–∏ —Å–∫–æ–ª—å–∫–æ —Ö–æ—á–µ—à—å, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ 10! ü•∞). –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–µ—à—å –∏–≥—Ä–∞—Ç—å, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /cancel ")


@dp.message_handler(commands=['cancel'])
async def process_start_command(message: types.Message):
    if user_dict["in_game"] == False:
        await message.reply(f"–ú—ã –≤—Ä–æ–¥–µ –∏ –Ω–µ –∏–≥—Ä–∞–ª–∏ —Å–µ–π—á–∞—Å üòÅ")
    elif user_dict["in_game"] == True:
        user_dict["in_game"] = False
        await message.reply(f"–ü–æ–∏–≥—Ä–∞–µ–º –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üò¢")


@dp.message_handler()
async def echo(message: types.Message):
    if user_dict["in_game"] == False:
        await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.\n–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ /help !")
    elif user_dict["in_game"] == True and user_dict["attempts"] == 0:
        if int(message.text) <= 10:
            user_dict["attempts"] = int(message.text)
            await message.answer(f"–•–æ—Ä–æ—à–æ, —É —Ç–µ–±—è {message.text} –ø–æ–ø—ã—Ç–æ–∫.\n–ù–∞—á–Ω–µ–º!")
        else:
            await message.answer(f"–Ø –∂–µ –ø—Ä–æ—Å–∏–ª –Ω–µ –±–æ–ª—å—à–µ 10!\n–ü–æ–¥—É–º–∞–π –µ—â–µ")
    elif user_dict["in_game"] == True and user_dict["attempts"] != 0:
        if int(message.text) == user_dict["number"]:
            user_dict["attempts"] = 0
            user_dict["number"] = 0
            user_dict["in_game"] = False
            await message.answer(f"–ö—Ä–∞—Å–∞–≤–µ–µ–µ–µ–µ—Ü!\n–°—ã–≥—Ä–∞–µ–º –µ—â–µ? /game")
        elif int(message.text) > user_dict["number"]:
            user_dict["attempts"] = user_dict["attempts"] - 1
            attempts = user_dict["attempts"]
            if attempts == 0:
                user_dict["in_game"] = False
                await message.answer(f"–ü–æ–ø—ã—Ç–∫–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å, –º–æ–∂–µ—Ç –ø–æ–≤–µ–∑–µ—Ç –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑? /game")
            else:
                await message.answer(f"–ù–µ —É–≥–∞–¥–∞–ª) –ú–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ! (–æ—Å—Ç–∞–ª–æ—Å—å {attempts} –ø–æ–ø—ã—Ç–æ–∫)")
        else:
            user_dict["attempts"] = user_dict["attempts"] - 1
            attempts = user_dict["attempts"]
            if attempts == 0:
                user_dict["in_game"] = False
                await message.answer(f"–ü–æ–ø—ã—Ç–∫–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å, –º–æ–∂–µ—Ç –ø–æ–≤–µ–∑–µ—Ç –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑? /game")
            else:
                await message.answer(f"–ù–µ —É–≥–∞–¥–∞–ª) –ú–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ! (–æ—Å—Ç–∞–ª–æ—Å—å {attempts} –ø–æ–ø—ã—Ç–æ–∫)")


@dp.message_handler(content_types=ContentType.STICKER)
async def unknown_message(msg: types.Message):
    if user_dict["in_game"] == True:
        await msg.answer(f"–ú—ã –∏–≥—Ä–∞–µ–º, –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–π—Å—è!")
    else:
        message_text = '–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä, –Ω–æ —è –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å –Ω–∏–º –¥–µ–ª–∞—Ç—å ü•≤.\n–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ /help !'
        await msg.reply(message_text, parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(content_types=ContentType.ANY)
async def unknown_message(msg: types.Message):
    if user_dict["in_game"] == True:
        await msg.answer(f"–ú—ã –∏–≥—Ä–∞–µ–º, –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–π—Å—è!")
    else:
        message_text = '–ù–µ –∑–Ω–∞—é, —á—Ç–æ —ç—Ç–æ.\n–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ /help !'
        await msg.reply(message_text, parse_mode=ParseMode.MARKDOWN)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
